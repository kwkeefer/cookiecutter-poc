[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.poc_description }}"
readme = "README.md"
requires-python = ">={{ cookiecutter.python_version }}"
license = { text = "Proprietary" }
authors = [
    { name = "{{ cookiecutter.full_name }}" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: {{ cookiecutter.python_version }}",
    "Programming Language :: Python :: 3 :: Only",
]
dependencies = [
    "requests>=2.31.0",
    "urllib3>=2.0.0",
    "colorama>=0.4.6",
    "netifaces>=0.11.0",
    "httpx>=0.28.1",
    "beautifulsoup4>=4.13.5",
    "requests-toolbelt>=1.0.0",
    "retrying>=1.4.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.5.0",
    "mypy>=1.10.0",
]
test = [
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
]
crypto = [
    "pycryptodome>=3.19.0",
]

[project.scripts]
{{ cookiecutter.project_slug }} = "{{ cookiecutter.project_slug }}.cli:main"

[project.urls]
Homepage = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}"
Repository = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}"

[tool.hatch.build.targets.wheel]
packages = ["src/{{ cookiecutter.project_slug }}"]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
]

[tool.coverage.run]
source_pkgs = ["{{ cookiecutter.project_slug }}"]
branch = true
parallel = true

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.ruff]
line-length = 120
target-version = "py{{ cookiecutter.python_version.replace('.', '') }}"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
]
ignore = [
    "E501",  # line too long, handled by formatter
    "F401",  # unused imports - annoying during development
    "F841",  # unused variables - annoying during development
]

[tool.mypy]
python_version = "{{ cookiecutter.python_version }}"
warn_return_any = false
disallow_untyped_defs = false
check_untyped_defs = false
warn_redundant_casts = false
warn_unused_ignores = false
no_implicit_reexport = false