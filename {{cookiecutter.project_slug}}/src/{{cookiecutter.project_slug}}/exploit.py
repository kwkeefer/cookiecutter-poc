#!/usr/bin/env python3
"""Main exploit code for {{ cookiecutter.project_name }}"""

import requests
from {{ cookiecutter.project_slug }}.utils.output import out, Output

# Disable SSL warnings
requests.packages.urllib3.disable_warnings()


def run(args):
    """Main exploit function

    Args:
        args: Arguments from argparse (target, proxy, verbose, etc)
    """
    target = args.target.rstrip('/')

    out.info(f"Starting exploit against {target}")
    out.debug(f"Verbose mode: {Output.verbose}")

    # Configure session
    session = requests.Session()
    session.verify = False
    out.debug(f"Session configured: verify={session.verify}")

    if args.proxy:
        session.proxies = {
            'http': args.proxy,
            'https': args.proxy
        }
        out.info(f"Using proxy: {args.proxy}")
        out.debug(f"Proxy config: {session.proxies}")

    # TODO: Add your exploit code here
    # Examples:
    # response = session.get(f"{target}/vulnerable-endpoint")
    # if "success" in response.text:
    #     out.success("Target is vulnerable!")
    # else:
    #     out.error("Target not vulnerable")

    out.warning("Exploit not implemented yet")


if __name__ == "__main__":
    # Quick test - run exploit directly without CLI
    import argparse
    parser = argparse.ArgumentParser()
    parser.add_argument("--target", default="http://localhost")
    parser.add_argument("--proxy", default=None)
    parser.add_argument("--verbose", "-v", action="store_true")
    args = parser.parse_args()

    # Enable verbose mode if requested
    if args.verbose:
        Output.set_verbose(True)

    run(args)